<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mappers.shippingMapper">

	<insert id="shippingInsertBoard">
		INSERT INTO shipping(shipping_num,wo_num,item_num,item_name,delivery_date,out_date,
		out_qty,qc_qty,incharge_name,cust_name)
		VALUES(#{shipping_num},#{wo_num},#{item_num},#{item_name},
		#{delivery_date},#{out_date},#{out_qty},#{qc_qty},#{incharge_name},#{cust_name})
	</insert>

	<select id="getBoardList" resultType="com.itwillbs.domain.ShippingDTO">
	SELECT shipping_num, 
			wo_num, 
			item_num, 
			item_name, 
			date_format(delivery_date,'%Y-%m-%d') as delivery_date, 
			date_format(out_date,'%Y-%m-%d') as out_date,
			out_qty,
			qc_qty,
			incharge_name,
			cust_name,
			COALESCE(out_progress,'대기') as out_progress
			from shipping
		<if test="search_option == 'product_name'.toString()">
			where item_name like CONCAT('%', #{search},'%')
		</if>
		<if test="search_option == 'item_num'.toString()">
			where item_num like CONCAT('%',#{search},'%')
		</if>
	
	</select>
<!-- 검색어	 -->
	<select id="getShippingCount" resultType="java.lang.Integer">
		select count(*) shipping_num, 
			wo_num, 
			item_num, 
			item_name, 
			date_format(delivery_date,'%Y-%m-%d') as delivery_date, 
			date_format(out_date,'%Y-%m-%d') as out_date,
			out_qty,
			qc_qty,
			incharge_name,
			cust_name,
			COALESCE(out_progress,'대기') as out_progress
			from shipping
		
		<if test="search_option == 'product_name'.toString()">
			where item_name like concat('%', #{search},'%')
		</if>
		<if test="search_option == 'item_num'.toString()">
			where item_num like concat('%',#{search},'%')
		</if>
	</select>
	
	<select id="selectShippingTotal" resultType="java.lang.Integer">
		select count(*) total from shipping
	
	</select>

	<select id="getShippingListMap" resultType="map">
		select   distinct qc.wo_num, qc.item_num, qc.item_name, qc.qc_qty 
		from qc_status qc join workorder w
		on qc.wo_num = w.wo_num
		join contract c
		on c.contract_qty = qc.qc_qty
        where w.wo_qty = c.contract_qty
		 and qc.wo_num not in (select distinct wo_num from shipping)
		
		
	</select>
<!-- 	select qc_status.wo_num,  -->
<!-- 		qc_status.item_num, qc_status.item_name, qc_status.qc_qty -->
<!-- 		from qc_status join workorder -->
<!-- 		on qc_status.wo_num = workorder.wo_num -->
<!-- 		where workorder.wo_num not in (select distinct wo_num from shipping) -->

<!-- 	<select id="getShippingList" resultType="com.itwillbs.domain.WorkorderDTO"> -->
<!-- 		select wo_num, item_num, item_name, qc_qty -->
<!-- 		from qc_status -->
<!-- 		where wo_num not in (select distinct wo_num from workorder) -->
<!-- 		order by wo_num -->
<!-- 	</select> -->

	<select id="getEmployeeList" resultType="com.itwillbs.domain.EmployeeDTO">
	select * from employee
	where dept_num = 200
	</select>

	<update id="updateShipping">
		update shipping
		set out_progress=#{out_progress}
		where shipping_num=#{shipping_num}
	</update>











</mapper>